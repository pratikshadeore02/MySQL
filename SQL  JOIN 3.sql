CREATE DATABASE JOINS;
USE JOINS;

CREATE TABLE DEPT (
DEPTID INT PRIMARY KEY,
DEPTNAME VARCHAR(30),
HEAD VARCHAR (30),
LOCATION VARCHAR (50));

INSERT INTO DEPT VALUES
(101,'HR','EMA','NEW YORK'),
(102,'IT','LIAN','SAN FRANCISCO'),
(103,'MARKETING','OLIVIA','CHICAGO'),
(104,'FINANCE','CLAN','LOS ANGELES');


SELECT * FROM DEPT;

CREATE TABLE EMP (
E_ID INT PRIMARY KEY,
E_NAME VARCHAR (30),
DEPT_ID INT NULL,
SALARY DECIMAL (10,2),
JOININGDATE DATE,
LOCATION VARCHAR (50),
FOREIGN KEY (DEPT_ID) REFERENCES DEPT (DEPTID));


INSERT INTO EMP VALUES
(1,'ALICE',101,60000,'2020-01-15','NEW YORK'),
(2,'BOB',102,50000,'2019-03-10','SAN FRANCISCO'),
(3,'CHARLIE',101,45000,'2021-06-20','CHICAGO'),
(4,'DAVID',NULL,70000,'2018-05-05','LOS ANGELES'),
(5,'EVA',103,40000,'2022-02-14','NEW YORK'),
(6,'FRANK',101,55000,'2018-11-30','SAN FRANCISCO');

#----------- INNER JOIN -------------------------------------------------

/* LIST ALL EMPLOYEES ALONG WITH THEIR DEPARTMENT NAMES */

SELECT * 
FROM EMP AS A 
INNER JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID; 


#------------------ LEFT JOIN ----------------------------------------

/* LIST ALL EMPLOYEES AND THEIR DAPT NAME, INCLUDING EMP NAME */

SELECT * 
FROM EMP AS A 
LEFT JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID;

#--------------------- RIGHT JOIN ----------------------

SELECT * 
FROM EMP AS A 
RIGHT JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID;

#-------------------- FULL JOIN ------------------------------

/* UNION */

SELECT * 
FROM EMP AS A 
LEFT JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID 
UNION
SELECT * 
FROM EMP AS A 
RIGHT JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID;

/* UNION ALL */

SELECT * 
FROM EMP AS A 
LEFT JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID 
UNION ALL
SELECT * 
FROM EMP AS A 
RIGHT JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID;

/* OR */

SELECT DEPTID FROM DEPT
UNION 
SELECT E_ID FROM EMP;
#------------------- SELF JOIN ------------------------------

SELECT E_ID,E_NAME,DEPTNAME 
FROM EMP AS A 
JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID;

/* SHOWING ALL ROW WITH NULLS WHERE THERE ARE NO MATCHES */

##########################################
# SELECT *                         #
# FROM EMP AS A                    #  AA MYSQL MA AA SYNTEX NAI CHALE 
# FULL OUTER JOIN DEPT AS B        #
# ON A.DEPT_ID = B.DEPTID;         #
#########################################

SELECT * 
FROM EMP AS A 
INNER JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID
WHERE B.LOCATION = 'SAN FRANCISCO'; 

SELECT * 
FROM EMP AS A 
INNER JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID
WHERE B.DEPTNAME != 'HR';

SELECT * 
FROM EMP AS A 
INNER JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID
WHERE B.LOCATION = 'NEW YORK' AND DEPTID = 101;

SELECT * 
FROM EMP AS A 
LEFT JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID
WHERE A.JOININGDATE BETWEEN '2018-01-01' AND '2019-12-31';

SELECT * 
FROM EMP AS A 
LEFT JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID
WHERE  YEAR (JOININGDATE) BETWEEN '2018' AND '2019';


/* FIND THE TOTAL SALARY PAID TO EMPLOYEE IN EACH DAPARTMENT */

SELECT DEPTNAME ,SUM(SALARY) 
FROM EMP AS A 
INNER JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID
GROUP BY DEPTNAME ;

/* FIND THE AVG SALARY PAID TO EMPLOYEE IN EACH DAPARTMENT */

SELECT DEPTNAME ,AVG(SALARY) 
FROM EMP AS A 
LEFT JOIN DEPT AS B 
ON A.DEPT_ID = B.DEPTID
GROUP BY DEPTNAME ;

/* FIND THE COUNT OF EMP NAME IN EACH DAPARTMENT */

SELECT DEPTNAME ,COUNT(E_NAME) 
FROM DEPT AS B
LEFT JOIN EMP AS A 
ON A.DEPT_ID = B.DEPTID
GROUP BY DEPTNAME ;

SELECT LOCATION,AVG(SALARY) 
FROM EMP AS A
LEFT JOIN DEPT AS B 
ON A.LOCATION = B.LOCATION
GROUP BY LOCATION ;

/* FIND PAIRS OF EMPLOYEE IN THE SAME DEPARTMENT*/
/* x */
SELECT DEPTNAME ,E_NAME,MAX(SALARY) AS S
FROM DEPT AS B
INNER JOIN EMP AS A 
ON A.DEPT_ID = B.DEPTID
GROUP BY DEPTNAME, E_NAME 
ORDER BY S DESC ;

/* THIS IS RIGHT QUERY */
SELECT A1.E_NAME AS E3,A2.E_NAME AS E4,A1.SALARY,A2.SALARY
FROM EMP AS A1
INNER JOIN EMP AS A2
ON A1.DEPT_ID = A2.DEPT_ID
WHERE A1.SALARY > A2.SALARY;


SELECT * FROM EMP;

/* FIND PAIRS OF EMPLOYEES WORKING IN THE SAME LOCATION */

SELECT E1.E_ID AS EMPID,E1.E_NAME AS EMPNAME,E2.E_ID AS EMP2ID,E2.E_NAME AS EMP2NAME,E1.LOCATION
FROM EMP AS E1
INNER JOIN EMP AS E2
ON E1.LOCATION = E2.LOCATION
AND E1.E_ID < E2.E_ID;

/* TO RETRIEVE THE SECOND-HIGHEST SALARY FROM THE TABLE*/

SELECT MAX(SALARY) FROM EMP WHERE SALARY <
(SELECT MAX(SALARY) FROM EMP);

